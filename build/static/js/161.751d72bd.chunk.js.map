{"version":3,"file":"static/js/161.751d72bd.chunk.js","mappings":"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","sources":["apis/markup.api.js","views/utilities/MarkupPrice/viewMarkupsById.js"],"sourcesContent":["import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../configs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nconst AuthKey = process.env.REACT_APP_AUTH_KEY;\r\n\r\nclass User extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"AuthKey\"] = `${AuthKey}`;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllMarkupConfig = ApiRoutes.Markup.AllMarkup;\r\n  MarkupByIdConfig = ApiRoutes.Markup.MarkupById;\r\n  AddMarkupConfig = ApiRoutes.Markup.AddMarkup;\r\n  UpdateMarkupConfig = ApiRoutes.Markup.UpdateMarkup;\r\n  DeleteMarkupConfig = ApiRoutes.Markup.DeleteMarkup;\r\n\r\n  getAllMarkup = async () => {\r\n    return this.instance({\r\n      method: this.AllMarkupConfig.Method,\r\n      url: this.AllMarkupConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getMarkupById = async (data) => {\r\n    return this.instance({\r\n      method: this.MarkupByIdConfig.Method,\r\n      url: this.MarkupByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getAddMarkup = async (data) => {\r\n    return this.instance({\r\n      method: this.AddMarkupConfig.Method,\r\n      url: this.AddMarkupConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getUpdateMarkup = async (data) => {\r\n    return this.instance({\r\n      method: this.UpdateMarkupConfig.Method,\r\n      url: this.UpdateMarkupConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getDeleteMarkup = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteMarkupConfig.Method,\r\n      url: this.DeleteMarkupConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default User;\r\n","import React ,{ useEffect, useCallback } from \"react\";\r\n// material-ui\r\nimport { Grid, Stack, InputLabel, TextField   } from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { NaturalById } from \"redux/redux-slice/markups.slice\";\r\nimport Markup from \"apis/markup.api\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction App() {\r\n  const params = useParams();\r\n  const markup = new Markup();\r\n  const dispatch = useDispatch();\r\n  const [rows, setRows] = useState('')\r\n//   const rows = useSelector((state) => state.markup.AllNaturalById);\r\n\r\n  const getAllUser = useCallback(async () => {\r\n    try {\r\n      const users = await markup.getAllMarkup({\r\n        id: params.id,\r\n      });\r\n      if (!users || !users.data.data) {\r\n        return toast.error(\"no latest data available\");\r\n      } else {\r\n        // dispatch(NaturalById(users.data.data));\r\n        setRows(users.data.data[0]);\r\n        return toast.success(\"Latest data available\");\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllUser();\r\n  }, []); \r\n  function formatDate(date) {\r\n    return new Date(date).toLocaleString(\"en-us\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <MainCard>\r\n      <form action=\"#\">\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Commission</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={rows.commission ? rows.commission : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Maximum Markup</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={rows.max? rows.max : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Minimum Markup</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={rows.min? rows.min : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Start Date</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={rows.createdAt? formatDate(rows.createdAt) : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Current Update</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={rows.updatedAt? formatDate(rows.updatedAt) : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        {/* <br /> */}\r\n        {/* <center>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </center> */}\r\n      </form>\r\n    </MainCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["User","HttpClient","constructor","super","process","_initializeRequestInterceptor","this","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","AllMarkupConfig","ApiRoutes","Markup","AllMarkup","MarkupByIdConfig","MarkupById","AddMarkupConfig","AddMarkup","UpdateMarkupConfig","UpdateMarkup","DeleteMarkupConfig","DeleteMarkup","getAllMarkup","async","method","Method","url","Endpoint","data","getMarkupById","getAddMarkup","getUpdateMarkup","getDeleteMarkup","params","useParams","markup","rows","setRows","useDispatch","useState","getAllUser","useCallback","users","id","toast","success","error","console","formatDate","date","Date","toLocaleString","day","month","year","useEffect","_jsx","_Fragment","children","MainCard","action","_jsxs","Grid","container","spacing","gridSpacing","item","xs","md","Stack","InputLabel","required","TextField","fullWidth","value","commission","disabled","max","min","createdAt","updatedAt"],"sourceRoot":""}