{"version":3,"file":"static/js/505.e5a63930.chunk.js","mappings":"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","sources":["apis/dashboard.api.js","ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","views/dashboard/Default/Polling.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/TotalVoteChart.js"],"sourcesContent":["import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../configs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass Dashboard extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  DashboardConfig = ApiRoutes.Dashboard.Data;\r\n\r\n  getDashboard = async () => {\r\n    return this.instance({\r\n      method: this.DashboardConfig.Method,\r\n      url: this.DashboardConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n}\r\n\r\nexport default Dashboard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// ==============================|| SKELETON - EARNING CARD ||============================== //\r\n\r\nconst EarningCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" height={30} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default EarningCard;\r\n","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEarning(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 9H9C7.89543 9 7 9.89543 7 11V17C7 18.1046 7.89543 19 9 19H19C20.1046 19 21 18.1046 21 17V11C21 9.89543 20.1046 9 19 9Z\",\n    stroke: \"white\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 16C15.1046 16 16 15.1046 16 14C16 12.8954 15.1046 12 14 12C12.8954 12 12 12.8954 12 14C12 15.1046 12.8954 16 14 16Z\",\n    fill: \"#90CAF9\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 9V7C17 6.46957 16.7893 5.96086 16.4142 5.58579C16.0391 5.21071 15.5304 5 15 5H5C4.46957 5 3.96086 5.21071 3.58579 5.58579C3.21071 5.96086 3 6.46957 3 7V13C3 13.5304 3.21071 14.0391 3.58579 14.4142C3.96086 14.7893 4.46957 15 5 15H7\",\n    stroke: \"white\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEarning);\nexport default __webpack_public_path__ + \"static/media/earning.00f461a5c235604f1375d5e59ee3e093.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\n// assets\r\nimport EarningIcon from 'assets/images/icons/earning.svg';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\n\r\nimport {\r\n    IconReport,\r\n    IconBuildingBank,\r\n    IconCurrencyRupee,\r\n    IconDatabase,\r\n    IconChartCandle,\r\n    IconUsers,\r\n    IconFileText,\r\n    IconQuestionMark,\r\n    IconFolder,\r\n    IconBooks\r\n} from \"@tabler/icons\";\r\n\r\n// constant\r\nconst icons = {\r\n    IconReport,\r\n    IconBuildingBank,\r\n    IconCurrencyRupee,\r\n    IconDatabase,\r\n    IconChartCandle,\r\n    IconUsers,\r\n    IconFileText,\r\n    IconQuestionMark,\r\n    IconFolder,\r\n    IconBooks\r\n};\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst EarningCard = ({ isLoading, isCount ,isTitle}) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonEarningCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.secondary[800],\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <img src={EarningIcon} alt=\"Notification\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                  \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            {isCount}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.secondary[200],\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.secondary[200]\r\n                                    }}\r\n                                >\r\n                                   {isTitle}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nEarningCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default EarningCard;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\n// material-ui\r\nimport { Grid } from \"@mui/material\";\r\n\r\n// project imports\r\nimport EarningCard from \"./EarningCard\";\r\nimport BajajAreaChartCard from \"./TotalGrowthBarChart\";\r\nimport TotalVoteChart from \"./TotalVoteChart\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport DashboardApi from \"apis/dashboard.api\";\r\nimport { toast } from \"react-hot-toast\";\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const dashboardApi = new DashboardApi();\r\n  const [allVoter, setAllVoter] = useState(0);\r\n  const [pendingVoter, setPendingVoter] = useState(0);\r\n  const [completedVoter, setCompletedVoter] = useState(0);\r\n  const [voterView, setVoterView] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const getDashboard = useCallback(async () => {\r\n    try {\r\n      const dashboardData = await dashboardApi.getDashboard();\r\n\r\n      if (!dashboardData || !dashboardData.data.data) {\r\n        return toast.error(\"No Data  available\");\r\n      } else {\r\n        setAllVoter(dashboardData.data.data.voter.allVoter);\r\n        setPendingVoter(dashboardData.data.data.voter.pendingVoter);\r\n        setCompletedVoter(dashboardData.data.data.voter.completeVoter);\r\n        setVoterView(dashboardData.data.data.voterView);\r\n        setData([\r\n          dashboardData.data.data.percentages.percentageMen,\r\n          dashboardData.data.data.percentages.percentageWomen,\r\n        ]);\r\n        setLoading(false);\r\n\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getDashboard();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={gridSpacing}>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item lg={4} md={6} sm={6} xs={12}>\r\n            <EarningCard\r\n              isLoading={isLoading}\r\n              isCount={allVoter}\r\n              isTitle={`All Voter`}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} sm={6} xs={12}>\r\n            <EarningCard\r\n              isLoading={isLoading}\r\n              isCount={pendingVoter}\r\n              isTitle={`Pending Voter`}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} sm={6} xs={12}>\r\n            <EarningCard\r\n              isLoading={isLoading}\r\n              isCount={completedVoter}\r\n              isTitle={`Completed Voters`}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={6} md={12} sm={12} xs={12}>\r\n            <BajajAreaChartCard isLoading={isLoading} isData={voterView} />\r\n          </Grid>\r\n          <Grid item lg={6} md={12} sm={12} xs={12}>\r\n            <TotalVoteChart isData={data} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"text\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={50} width={80} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={530} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default TotalGrowthBarChart;\r\n","import PropTypes from \"prop-types\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\n\r\n// third-party\r\nimport ApexCharts from \"apexcharts\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from \"ui-component/cards/Skeleton/TotalGrowthBarChart\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\n\r\n// chart data\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = ({ isLoading, isData }) => {\r\n  const theme = useTheme();\r\n  const customization = useSelector((state) => state.customization);\r\n  const [data, setData] = useState([]);\r\n\r\n  const { navType } = customization;\r\n  const { primary } = theme.palette.text;\r\n  const darkLight = theme.palette.dark.light;\r\n  const grey200 = theme.palette.grey[200];\r\n  const grey500 = theme.palette.grey[500];\r\n\r\n  const primary200 = theme.palette.primary[200];\r\n  const primaryDark = theme.palette.primary.dark;\r\n  const secondaryMain = theme.palette.secondary.main;\r\n  const secondaryLight = theme.palette.secondary.light;\r\n  const chartData = {\r\n    height: 480,\r\n    type: \"bar\",\r\n    options: {\r\n      chart: {\r\n        id: \"bar-chart\",\r\n        stacked: true,\r\n        toolbar: {\r\n          show: true,\r\n        },\r\n        zoom: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            legend: {\r\n              position: \"bottom\",\r\n              offsetX: -10,\r\n              offsetY: 0,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"50%\",\r\n        },\r\n      },\r\n      xaxis: {\r\n        type: \"category\",\r\n        categories: [\"BJP\", \"Congress\", \"BSP\", \"RLP\", \"IND\", \"Other\"],\r\n      },\r\n      legend: {\r\n        show: true,\r\n        fontSize: \"14px\",\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        position: \"bottom\",\r\n        offsetX: 20,\r\n        labels: {\r\n          useSeriesColors: false,\r\n        },\r\n        markers: {\r\n          width: 16,\r\n          height: 16,\r\n          radius: 5,\r\n        },\r\n        itemMargin: {\r\n          horizontal: 15,\r\n          vertical: 8,\r\n        },\r\n      },\r\n      fill: {\r\n        type: \"solid\",\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      grid: {\r\n        show: true,\r\n      },\r\n    },\r\n    series: data,\r\n  };\r\n  useEffect(() => {\r\n    const newChartData = {\r\n      ...chartData.options,\r\n      colors: [primary200, primaryDark, secondaryMain, secondaryLight],\r\n      xaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: [\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n              primary,\r\n            ],\r\n          },\r\n        },\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: [primary],\r\n          },\r\n        },\r\n      },\r\n      grid: {\r\n        borderColor: grey200,\r\n      },\r\n      tooltip: {\r\n        theme: \"light\",\r\n      },\r\n      legend: {\r\n        labels: {\r\n          colors: grey500,\r\n        },\r\n      },\r\n    };\r\n\r\n    // do not load chart when loading\r\n    if (!isLoading) {\r\n      setData([\r\n        {\r\n          name: \"Male\",\r\n          data: [\r\n            isData.BJP.Male ? isData.BJP.Male : 0,\r\n            isData.Congress.Male ? isData.Congress.Male : 0,\r\n            isData.BSP.Male ? isData.BSP.Male : 0,\r\n            isData.RPL.Male ? isData.RPL.Male : 0,\r\n            isData.IND.Male ? isData.IND.Male : 0,\r\n            isData.Other.Male ? isData.Other.Male : 0,\r\n          ],\r\n        },\r\n        {\r\n          name: \"Female\",\r\n          data: [\r\n            isData.BJP.Female ? isData.BJP.Female : 0,\r\n            isData.Congress.Female ? isData.Congress.Female : 0,\r\n            isData.BSP.Female ? isData.BSP.Female : 0,\r\n            isData.RPL.Female ? isData.RPL.Female : 0,\r\n            isData.IND.Female ? isData.IND.Female : 0,\r\n            isData.Other.Female ? isData.Other.Female : 0,\r\n          ],\r\n        },\r\n        {\r\n          name: \"Other\",\r\n          data: [\r\n            isData.BJP.Other ? isData.BJP.Other : 0,\r\n            isData.Congress.Other ? isData.Congress.Other : 0,\r\n            isData.BSP.Other ? isData.BSP.Other : 0,\r\n            isData.RPL.Other ? isData.RPL.Other : 0,\r\n            isData.IND.Other ? isData.IND.Other : 0,\r\n            isData.Other.Other ? isData.Other.Other : 0,\r\n          ],\r\n        },\r\n      ]);\r\n      ApexCharts.exec(`bar-chart`, \"updateOptions\", newChartData);\r\n    }\r\n  }, [\r\n    navType,\r\n    primary200,\r\n    primaryDark,\r\n    secondaryMain,\r\n    secondaryLight,\r\n    primary,\r\n    darkLight,\r\n    grey200,\r\n    isLoading,\r\n    grey500,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <SkeletonTotalGrowthBarChart />\r\n      ) : (\r\n        <MainCard>\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n              <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Grid item>\r\n                  <Grid container direction=\"column\" spacing={1}>\r\n                    <Grid item>\r\n                      <Typography variant=\"subtitle2\">Total Growth</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Chart {...chartData} />\r\n            </Grid>\r\n          </Grid>\r\n        </MainCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nTotalGrowthBarChart.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default TotalGrowthBarChart;\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\n\r\nconst DonutChart = ({ isData }) => {\r\n  // Sample data for the donut chart\r\n  const options = {\r\n    labels: [\"Male\", \"Female\"],\r\n    options: {\r\n      chart: {\r\n        width: 380,\r\n        type: \"donut\",\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 400,\r\n            },\r\n            legend: {\r\n              show: false,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      legend: {\r\n        position: \"right\",\r\n        offsetY: 0,\r\n        height: 230,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <MainCard>\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Grid container direction=\"column\" spacing={1}>\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle\">Male Vs Female</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ReactApexChart options={options} series={isData} type=\"donut\" />\r\n        </Grid>\r\n      </Grid>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default DonutChart;\r\n"],"names":["Dashboard","HttpClient","constructor","super","process","_initializeRequestInterceptor","this","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","DashboardConfig","ApiRoutes","Data","getDashboard","async","method","Method","url","Endpoint","data","EarningCard","_jsx","Card","children","CardContent","_jsxs","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","styled","MainCard","_ref","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","_ref2","isLoading","isCount","isTitle","useTheme","_Fragment","SkeletonEarningCard","border","Box","p","Avatar","typography","commonAvatar","largeAvatar","mt","src","EarningIcon","alt","alignItems","Typography","fontSize","fontWeight","mr","mb","cursor","smallAvatar","ArrowUpwardIcon","transform","setLoading","useState","dashboardApi","DashboardApi","allVoter","setAllVoter","pendingVoter","setPendingVoter","completedVoter","setCompletedVoter","voterView","setVoterView","setData","useCallback","dashboardData","voter","completeVoter","percentages","percentageMen","percentageWomen","toast","error","console","useEffect","spacing","gridSpacing","xs","lg","md","sm","BajajAreaChartCard","isData","TotalVoteChart","TotalGrowthBarChart","zeroMinWidth","customization","useSelector","state","navType","primary","text","darkLight","light","grey200","grey","grey500","primary200","primaryDark","secondaryMain","main","secondaryLight","chartData","type","options","chart","id","stacked","toolbar","show","zoom","enabled","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","fill","dataLabels","grid","series","newChartData","colors","style","yaxis","borderColor","tooltip","name","BJP","Male","Congress","BSP","RPL","IND","Other","Female","ApexCharts","SkeletonTotalGrowthBarChart","Chart","ReactApexChart"],"sourceRoot":""}