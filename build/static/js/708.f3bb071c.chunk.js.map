{"version":3,"file":"static/js/708.f3bb071c.chunk.js","mappings":"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","sources":["apis/order.api.js","views/utilities/Leads/leadsDetails.js"],"sourcesContent":["import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../configs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nconst AuthKey = process.env.REACT_APP_AUTH_KEY;\r\n\r\nclass User extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"AuthKey\"] = `${AuthKey}`;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllOrderConfig = ApiRoutes.Orders.AllOrder;\r\n  OrderByIdConfig = ApiRoutes.Orders.OrderDetails;\r\n  AllLeadsConfig = ApiRoutes.Orders.AllLeads;\r\n  LeadsByIdConfig = ApiRoutes.Orders.LeadsById;\r\n\r\n  getAllLeads = async () => {\r\n    return this.instance({\r\n      method: this.AllLeadsConfig.Method,\r\n      url: this.AllLeadsConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getLeadsById = async (data) => {\r\n    return this.instance({\r\n      method: this.LeadsByIdConfig.Method,\r\n      url: this.LeadsByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getAllOrder = async () => {\r\n    return this.instance({\r\n      method: this.AllOrderConfig.Method,\r\n      url: this.AllOrderConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getOrderById = async (data) => {\r\n    return this.instance({\r\n      method: this.OrderByIdConfig.Method,\r\n      url: this.OrderByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default User;\r\n","import React, { useEffect, useCallback } from \"react\";\r\n// material-ui\r\nimport {\r\n  Grid,\r\n  Stack,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n} from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LeadsDetailsById } from \"redux/redux-slice/orders.slice\";\r\nimport Markup from \"apis/order.api\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const params = useParams();\r\n  const markup = new Markup();\r\n  const dispatch = useDispatch();\r\n  const getAllUser = useCallback(async () => {\r\n    try {\r\n      const users = await markup.getLeadsById({\r\n        leadId: params.id,\r\n      });\r\n      if (!users || !users.data.data) {\r\n        return toast.error(\"no latest data available\");\r\n      } else {\r\n        dispatch(LeadsDetailsById(users.data.data));\r\n        return toast.success(\"Latest data available\");\r\n        // return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n  const rows = useSelector((state) => state.orders.leadsDetailsById);\r\n  useEffect(() => {\r\n    getAllUser();\r\n  }, []);\r\n  function formatDate(date) {\r\n    return new Date(date).toLocaleString(\"en-us\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MainCard>\r\n        <form action=\"#\">\r\n          <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack>\r\n                <InputLabel >Name</InputLabel>\r\n                <TextField\r\n                  fullWidth\r\n                  value={rows?.name ? rows.name : \"-\"}\r\n                  disabled\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack>\r\n                <InputLabel >Email</InputLabel>\r\n                <TextField\r\n                  fullWidth\r\n                  value={rows?.email ? rows.email : \"-\"}\r\n                  disabled\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Stack>\r\n                <InputLabel >Subject</InputLabel>\r\n                <TextField\r\n                  fullWidth\r\n                  value={rows?.subject ? rows.subject : \"-\"}\r\n                  disabled\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} h={\"50pc\"}>\r\n              <Stack>\r\n                <InputLabel >Message</InputLabel>\r\n                <TextareaAutosize\r\n                  style={{ width: \"100%\" }}\r\n                  minRows={4} // Adjust the number of rows as needed\r\n                  value={rows?.message ? rows.message : \"-\"}\r\n                  disabled\r\n                />\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["User","HttpClient","constructor","super","process","_initializeRequestInterceptor","this","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","AllOrderConfig","ApiRoutes","Orders","AllOrder","OrderByIdConfig","OrderDetails","AllLeadsConfig","AllLeads","LeadsByIdConfig","LeadsById","getAllLeads","async","method","Method","url","Endpoint","data","getLeadsById","getAllOrder","getOrderById","params","useParams","markup","Markup","dispatch","useDispatch","getAllUser","useCallback","users","leadId","id","LeadsDetailsById","toast","success","error","console","rows","useSelector","state","orders","leadsDetailsById","useEffect","_jsx","_Fragment","children","MainCard","action","_jsxs","Grid","container","spacing","gridSpacing","item","xs","md","Stack","InputLabel","TextField","fullWidth","value","name","disabled","email","subject","h","TextareaAutosize","style","width","minRows","message"],"sourceRoot":""}