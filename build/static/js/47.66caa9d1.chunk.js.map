{"version":3,"file":"static/js/47.66caa9d1.chunk.js","mappings":"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","sources":["apis/shoptime.api.js","views/utilities/ShopTime/viewShopTimeById.js"],"sourcesContent":["import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../configs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nconst AuthKey = process.env.REACT_APP_AUTH_KEY;\r\n\r\nclass ShopTime extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"AuthKey\"] = `${AuthKey}`;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  ShopTimeConfig = ApiRoutes.ShopTime.AllShop;\r\n  AddShopConfig = ApiRoutes.ShopTime.AddShop;\r\n  EditShopConfig = ApiRoutes.ShopTime.EditShop;\r\n  ShopByIdConfig = ApiRoutes.ShopTime.ShopById;\r\n  DeleteShopTimeConfig = ApiRoutes.ShopTime.DeleteShop;\r\n\r\n  getAllShop = async (data) => {\r\n    return this.instance({\r\n      method: this.ShopTimeConfig.Method,\r\n      url: this.ShopTimeConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getAddShop = async (data) => {\r\n    return this.instance({\r\n      method: this.AddShopConfig.Method,\r\n      url: this.AddShopConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getEditShop = async (data) => {\r\n    return this.instance({\r\n      method: this.EditShopConfig.Method,\r\n      url: this.EditShopConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getShopById = async (data) => {\r\n    return this.instance({\r\n      method: this.ShopByIdConfig.Method,\r\n      url: this.ShopByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getDeleteShop = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteShopTimeConfig.Method,\r\n      url: this.DeleteShopTimeConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default ShopTime;\r\n","import React ,{ useEffect, useCallback } from \"react\";\r\n// material-ui\r\nimport { Grid, Stack, InputLabel, TextField   } from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { NaturalById } from \"redux/redux-slice/markups.slice\";\r\nimport ShopTime from \"apis/shoptime.api\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction App() {\r\n  const params = useParams();\r\n  const shopTime = new ShopTime();\r\n  const dispatch = useDispatch();\r\n  const [rows, setRows] = useState('')\r\n  const [week, setWeek] = useState('')\r\n  const [weekEnd, setWeekEnd] = useState('')\r\n\r\n//   const rows = useSelector((state) => state.markup.AllNaturalById);\r\n\r\n  const getAllUser = useCallback(async () => {\r\n    try {\r\n      const users = await shopTime.getShopById({\r\n        userId: params.id,\r\n      });\r\n      if (!users || !users.data.data) {\r\n        return toast.error(\"no latest data available\");\r\n      } else {\r\n        // dispatch(NaturalById(users.data.data));\r\n        setRows(users.data.data[0]);\r\n        setWeek(users.data.data.week);\r\n        setWeekEnd(users.data.data.weekEnd)\r\n        return toast.success(\"Latest data available\");\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAllUser();\r\n  }, []); \r\n\r\n  function formatDate(date) {\r\n    return new Date(date).toLocaleString(\"en-us\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n  }\r\n  function formatTime(time) {\r\n    return new Date(time).toLocaleString(\"en-us\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      // second: \"numeric\",\r\n    });\r\n  }\r\n \r\n\r\n  return (\r\n    <>\r\n        <MainCard>\r\n      <form action=\"#\">\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Start Time</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={week?.startTime ? formatTime(week.startTime) : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>End Time</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={week?.endTime ? formatTime(week.endTime) : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Start Working Day</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={week?.start ? week.start : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>End Working Day</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={week?.end ? week.end : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Start Leave Day</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={weekEnd.start ? weekEnd.start : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>End Leave Day</InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                value={weekEnd.end ? weekEnd.end : '-'}\r\n                disabled\r\n              />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        {/* <br /> */}\r\n        {/* <center>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </center> */}\r\n      </form>\r\n    </MainCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["ShopTime","HttpClient","constructor","super","process","_initializeRequestInterceptor","this","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","ShopTimeConfig","ApiRoutes","AllShop","AddShopConfig","AddShop","EditShopConfig","EditShop","ShopByIdConfig","ShopById","DeleteShopTimeConfig","DeleteShop","getAllShop","async","method","Method","url","Endpoint","data","getAddShop","getEditShop","getShopById","getDeleteShop","params","useParams","shopTime","rows","setRows","useDispatch","useState","week","setWeek","weekEnd","setWeekEnd","getAllUser","useCallback","users","userId","id","toast","success","error","console","formatTime","time","Date","toLocaleString","hour","minute","useEffect","_jsx","_Fragment","children","MainCard","action","_jsxs","Grid","container","spacing","gridSpacing","item","xs","md","Stack","InputLabel","required","TextField","fullWidth","value","startTime","disabled","endTime","start","end"],"sourceRoot":""}