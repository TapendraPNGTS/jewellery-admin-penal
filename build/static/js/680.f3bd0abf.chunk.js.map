{"version":3,"file":"static/js/680.f3bd0abf.chunk.js","mappings":"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","sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","apis/auth/auth.api.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"sourcesContent":["// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import { getTokenLocal } from \"../../utils/localStorage.util\";\r\nimport ApiRoutes from \"../../configs/endpoints.config\";\r\nimport HttpClient from \"../index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nclass Auth extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  loginConfig = ApiRoutes.Auth.Login;\r\n\r\n  login = async (reqBody) => {\r\n    return this.instance({\r\n      method: this.loginConfig.Method,\r\n      url: this.loginConfig.Endpoint,\r\n      headers: {},\r\n      data: reqBody,\r\n    });\r\n  };\r\n}\r\n\r\nexport default Auth;\r\n","import { useState } from \"react\";\r\nimport { useNavigate, Navigate } from \"react-router-dom\";\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Stack,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\n// third party\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n// project imports\r\nimport useScriptRef from \"hooks/useScriptRef\";\r\nimport AnimateButton from \"ui-component/extended/AnimateButton\";\r\n// assets\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nimport AuthApi from \"../../../../apis/auth/auth.api\";\r\nimport { useAuthenticated } from \"../../../../hooks/useAuthenticated.hook\";\r\nimport { getUserLocal } from \"../../../../utils/localStorage.util\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  updateUser,\r\n  updateToken,\r\n} from \"../../../../redux/redux-slice/user.slice\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst FirebaseLogin = ({ ...others }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const authApi = new AuthApi();\r\n  const isAuth = useAuthenticated();\r\n  const userInfo = getUserLocal();\r\n  const theme = useTheme();\r\n  const scriptedRef = useScriptRef();\r\n  const [checked, setChecked] = useState(true);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Navigate to=\"/dashboard\" />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Formik\r\n          initialValues={{\r\n            number: \"\",\r\n            password: \"\",\r\n            submit: null,\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            number: Yup.string().max(10).required(\"Number is required\"),\r\n            password: Yup.string().max(255).required(\"Password is required\"),\r\n          })}\r\n          onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n            try {\r\n              if (scriptedRef.current) {\r\n                const loginResponse = await authApi.login({\r\n                  number: values.number,\r\n                  password: values.password,\r\n                  type: \"Admin\",\r\n                });\r\n                console.log(loginResponse);\r\n                if (loginResponse && loginResponse?.data?.code === 200) {\r\n                  dispatch(updateToken(loginResponse.data.data.token));\r\n                  dispatch(updateUser(loginResponse.data.data.user));\r\n                  toast.success(`Login successsfully`);\r\n                  navigate(\"/dashboard\", { replace: true });\r\n                } else {\r\n                  return toast.error(`Something went wrong!`);\r\n                }\r\n                setStatus({ success: true });\r\n                setSubmitting(false);\r\n              }\r\n            } catch (err) {\r\n              console.error(err);\r\n              if (scriptedRef.current) {\r\n                setStatus({ success: false });\r\n                setErrors({ submit: err.message });\r\n                setSubmitting(false);\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            touched,\r\n            values,\r\n          }) => (\r\n            <form noValidate onSubmit={handleSubmit} {...others}>\r\n              <FormControl\r\n                fullWidth\r\n                error={Boolean(touched.number && errors.number)}\r\n                sx={{ ...theme.typography.customInput }}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-email-login\">\r\n                  Contact Number\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-email-login\"\r\n                  type=\"number\"\r\n                  value={values.number}\r\n                  name=\"number\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  label=\"Contact Number\"\r\n                  inputProps={{}}\r\n                />\r\n                {touched.number && errors.number && (\r\n                  <FormHelperText\r\n                    error\r\n                    id=\"standard-weight-helper-text-email-login\"\r\n                  >\r\n                    {errors.number}\r\n                  </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n\r\n              <FormControl\r\n                fullWidth\r\n                error={Boolean(touched.password && errors.password)}\r\n                sx={{ ...theme.typography.customInput }}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password-login\">\r\n                  Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password-login\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={values.password}\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                        size=\"large\"\r\n                      >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Password\"\r\n                  inputProps={{}}\r\n                />\r\n                {touched.password && errors.password && (\r\n                  <FormHelperText\r\n                    error\r\n                    id=\"standard-weight-helper-text-password-login\"\r\n                  >\r\n                    {errors.password}\r\n                  </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n              <Stack\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                spacing={1}\r\n              >\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={checked}\r\n                      onChange={(event) => setChecked(event.target.checked)}\r\n                      name=\"checked\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Remember me\"\r\n                />\r\n              </Stack>\r\n              {errors.submit && (\r\n                <Box sx={{ mt: 3 }}>\r\n                  <FormHelperText error>{errors.submit}</FormHelperText>\r\n                </Box>\r\n              )}\r\n              <Box sx={{ mt: 2 }}>\r\n                <AnimateButton>\r\n                  <Button\r\n                    disableElevation\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </AnimateButton>\r\n              </Box>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","import { Link } from \"react-router-dom\";\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from \"@mui/material\";\r\n// project imports\r\nimport AuthWrapper1 from \"../AuthWrapper1\";\r\nimport AuthCardWrapper from \"../AuthCardWrapper\";\r\nimport AuthLogin from \"../auth-forms/AuthLogin\";\r\nimport Logo from \"../../../../assets/images/icons/logo.png\";\r\n// assets\r\n// ================================|| AUTH3 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <AuthWrapper1>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"flex-end\"\r\n        sx={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            sx={{ minHeight: \"calc(100vh - 68px)\" }}\r\n          >\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AuthCardWrapper>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Grid item sx={{ mb: 3 }}>\r\n                    <Link to=\"#\">\r\n                      <img src={Logo} width={150} height={120} />\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid\r\n                      container\r\n                      direction={matchDownSM ? \"column-reverse\" : \"row\"}\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"center\"\r\n                    >\r\n                      <Grid item>\r\n                        <Stack\r\n                          alignItems=\"center\"\r\n                          justifyContent=\"center\"\r\n                          spacing={1}\r\n                        >\r\n                          <Typography\r\n                            color={theme.palette.secondary.main}\r\n                            gutterBottom\r\n                            variant={matchDownSM ? \"h3\" : \"h2\"}\r\n                          >\r\n                            Hi, Welcome Back\r\n                          </Typography>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AuthLogin />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n                </Grid>\r\n              </AuthCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n          {/* <AuthFooter /> */}\r\n        </Grid>\r\n      </Grid>\r\n    </AuthWrapper1>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["styled","_ref","theme","backgroundColor","palette","primary","light","minHeight","children","other","_jsx","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","Auth","HttpClient","constructor","super","process","_initializeRequestInterceptor","this","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","loginConfig","ApiRoutes","Login","login","async","method","Method","url","Endpoint","data","reqBody","others","navigate","useNavigate","dispatch","useDispatch","authApi","AuthApi","isAuth","useAuthenticated","getUserLocal","useTheme","scriptedRef","checked","setChecked","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Navigate","to","_Fragment","Formik","initialValues","number","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","_loginResponse$data","loginResponse","type","console","log","code","toast","error","updateToken","token","updateUser","user","success","replace","err","message","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_jsxs","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","Stack","direction","alignItems","justifyContent","spacing","FormControlLabel","control","Checkbox","target","color","mt","AnimateButton","Button","disableElevation","disabled","variant","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","Grid","container","item","m","mb","AuthCardWrapper","Link","src","Logo","width","height","Typography","secondary","main","gutterBottom","AuthLogin","Divider"],"sourceRoot":""}