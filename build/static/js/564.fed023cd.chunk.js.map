{"version":3,"file":"static/js/564.fed023cd.chunk.js","mappings":"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","sources":["apis/shoptime.api.js","views/utilities/ShopTime/updateShopTime.js"],"sourcesContent":["import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../configs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nconst AuthKey = process.env.REACT_APP_AUTH_KEY;\r\n\r\nclass ShopTime extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      config.headers[\"AuthKey\"] = `${AuthKey}`;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  ShopTimeConfig = ApiRoutes.ShopTime.AllShop;\r\n  AddShopConfig = ApiRoutes.ShopTime.AddShop;\r\n  EditShopConfig = ApiRoutes.ShopTime.EditShop;\r\n  ShopByIdConfig = ApiRoutes.ShopTime.ShopById;\r\n  DeleteShopTimeConfig = ApiRoutes.ShopTime.DeleteShop;\r\n\r\n  getAllShop = async (data) => {\r\n    return this.instance({\r\n      method: this.ShopTimeConfig.Method,\r\n      url: this.ShopTimeConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getAddShop = async (data) => {\r\n    return this.instance({\r\n      method: this.AddShopConfig.Method,\r\n      url: this.AddShopConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getEditShop = async (data) => {\r\n    return this.instance({\r\n      method: this.EditShopConfig.Method,\r\n      url: this.EditShopConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getShopById = async (data) => {\r\n    return this.instance({\r\n      method: this.ShopByIdConfig.Method,\r\n      url: this.ShopByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getDeleteShop = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteShopTimeConfig.Method,\r\n      url: this.DeleteShopTimeConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default ShopTime;\r\n","import React ,{ useEffect, useCallback, useState } from \"react\";\r\n// material-ui\r\nimport { Grid, Stack, InputLabel, TextField, Button,Select, MenuItem } from \"@mui/material\";\r\n// project imports\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport ShopTime from \"apis/shoptime.api\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n\r\nfunction App() {\r\n  const params = useParams();\r\n  const shopTime = new ShopTime();\r\n  const navigate = useNavigate();\r\n  const [defaultTime , setDefaultTime] = useState('') // Replace with your default time\r\n  const [defaultOffTime , setDefaultOffTime] = useState('') // Replace with your default time\r\n  const [openTiming, setOpenTiming] = useState(\"\");\r\n  const [closeTiming, setCloseTiming] = useState(\"\");\r\n  const [startDay, setStartDay] = useState(\"\");\r\n  const [endDay, setEndDay] = useState(\"\");\r\n  const [LeaveStart, setLeaveStart] = useState(\"\");\r\n  const [LeaveendDay, setLeaveEndtDay] = useState(\"\");\r\n  const [activeTime, setActiveTime] = useState('false');\r\n  const setting = {\r\n    flexDirection: 'column !important',\r\n  };\r\n  \r\n  const days = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n  ];\r\n  const week = {\r\n    start: startDay,\r\n    end: endDay,\r\n    startTime: openTiming,\r\n    endTime: closeTiming,\r\n  }\r\n  const weekEnd  = {\r\n    start: LeaveStart,\r\n    end: LeaveendDay,\r\n    startTime: openTiming,\r\n    endTime: closeTiming,\r\n  }\r\n  const getAllUser = useCallback(async () => {\r\n    try {\r\n      const users = await shopTime.getShopById({\r\n        timeId: params.id,\r\n      });\r\n      if (!users || !users.data.data) {\r\n        return toast.error(\"no latest data available\");\r\n      } else {\r\n        setStartDay(users.data.data.week.start);\r\n        setEndDay(users.data.data.week.end);\r\n        setLeaveStart(users.data.data.weekEnd.start);\r\n        setLeaveEndtDay(users.data.data.weekEnd.end);\r\n        setDefaultTime(users.data.data.week.startTime);\r\n        setDefaultOffTime(users.data.data.week.endTime);\r\n        setActiveTime(users.data.data.isActive);\r\n        return toast.success(\"Latest data available\");\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  async function  updateMarkups(event) {\r\n    event.preventDefault();\r\n      const addUserResponse = await shopTime.getEditShop({\r\n      timeId: params.id,\r\n      week: week,\r\n      weekEnd: weekEnd,\r\n      active: activeTime,\r\n    });\r\n    if (addUserResponse && addUserResponse?.data?.code === 200) {\r\n      toast.success(`Added successsfully`);\r\n      navigate(\"/shoptime-history\", { replace: true });\r\n    } else {\r\n      return toast.error(`Something went wrong!`);\r\n    }\r\n  }  \r\n  useEffect(() => {\r\n    getAllUser();\r\n    setOpenTiming(dayjs(defaultTime));\r\n    setCloseTiming(dayjs(defaultOffTime));\r\n  }, [defaultTime,defaultOffTime]); \r\n  function formatDate(date) {\r\n    return new Date(date).toLocaleString(\"en-us\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n  }\r\n  function formatTime(time) {\r\n    return new Date(time).toLocaleString(\"en-us\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      // second: null,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <MainCard>\r\n      <form onSubmit={updateMarkups} action=\"#\">\r\n      <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Open Time</InputLabel>\r\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                <DemoContainer components={[\"TimePicker\"]}>\r\n                  <TimePicker\r\n                    label=\"Start Day Time\"\r\n                    value={openTiming}\r\n                    onChange={(newTime) => {\r\n                      \r\n                      formatTime(setOpenTiming(newTime));\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    {...setting}\r\n                  />\r\n                </DemoContainer>\r\n              </LocalizationProvider>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Close Time</InputLabel>\r\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                <DemoContainer components={[\"TimePicker\"]}>\r\n                  <TimePicker\r\n                    label=\"End Day Time\"\r\n                    value={closeTiming}\r\n                    onChange={(newTime) => formatTime(setCloseTiming(newTime))}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </DemoContainer>\r\n              </LocalizationProvider>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Start Work day</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                id=\"commission\"\r\n                name=\"commission\"\r\n                value={startDay}\r\n                onChange={(e) => {\r\n                  setStartDay(e.target.value);\r\n                }}\r\n              >\r\n                {days.map((day) => (\r\n                  <MenuItem key={day} value={day}>\r\n                    {day}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>End work day</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                id=\"commission\"\r\n                name=\"commission\"\r\n                value={endDay}\r\n                onChange={(e) => {\r\n                  setEndDay(e.target.value);\r\n                }}\r\n              >\r\n                {days.map((day) => (\r\n                  <MenuItem key={day} value={day}>\r\n                    {day}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Start week day</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                id=\"commission\"\r\n                name=\"commission\"\r\n                value={LeaveStart}\r\n                onChange={(e) => {\r\n                  setLeaveStart(e.target.value);\r\n                }}\r\n              >\r\n                {days.map((day) => (\r\n                  <MenuItem key={day} value={day}>\r\n                    {day}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>End week day</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                id=\"commission\"\r\n                name=\"commission\"\r\n                value={LeaveendDay}\r\n                onChange={(e) => {\r\n                  setLeaveEndtDay(e.target.value);\r\n                }}\r\n                // error={isEndDayError}\r\n              >\r\n                {days.map((day) => (\r\n                  <MenuItem key={day} value={day}>\r\n                    {day}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <Stack>\r\n              <InputLabel required>Active Time</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                id=\"activeTime\"\r\n                name=\"activeTime\"\r\n                value={activeTime}\r\n                onChange={(e) => {\r\n                  setActiveTime(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value=\"true\">True</MenuItem>\r\n                <MenuItem value=\"false\">False</MenuItem>\r\n              </Select>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <center>\r\n          <Button variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </center>\r\n      </form>\r\n    </MainCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["ShopTime","HttpClient","constructor","super","process","_initializeRequestInterceptor","this","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","ShopTimeConfig","ApiRoutes","AllShop","AddShopConfig","AddShop","EditShopConfig","EditShop","ShopByIdConfig","ShopById","DeleteShopTimeConfig","DeleteShop","getAllShop","async","method","Method","url","Endpoint","data","getAddShop","getEditShop","getShopById","getDeleteShop","params","useParams","shopTime","navigate","useNavigate","defaultTime","setDefaultTime","useState","defaultOffTime","setDefaultOffTime","openTiming","setOpenTiming","closeTiming","setCloseTiming","startDay","setStartDay","endDay","setEndDay","LeaveStart","setLeaveStart","LeaveendDay","setLeaveEndtDay","activeTime","setActiveTime","days","week","start","end","startTime","endTime","weekEnd","getAllUser","useCallback","users","timeId","id","isActive","toast","success","error","console","formatTime","time","Date","toLocaleString","hour","minute","useEffect","dayjs","_jsx","_Fragment","children","MainCard","_jsxs","onSubmit","event","_addUserResponse$data","preventDefault","addUserResponse","active","code","replace","action","Grid","container","spacing","gridSpacing","item","xs","md","Stack","InputLabel","required","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","TimePicker","label","value","onChange","newTime","renderInput","TextField","flexDirection","Select","fullWidth","name","e","target","map","day","MenuItem","Button","variant","type"],"sourceRoot":""}