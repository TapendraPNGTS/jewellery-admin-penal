{"version":3,"file":"static/js/969.cc24b0b9.chunk.js","mappings":"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","sources":["apis/member-list.api.js","views/utilities/voter-list/view-family-member-list.js"],"sourcesContent":["import { getTokenLocal } from \"../utils/localStorage.util\";\r\nimport ApiRoutes from \"../configs/endpoints.config\";\r\nimport HttpClient from \"./index.api\";\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass MemberList extends HttpClient {\r\n  constructor() {\r\n    super(baseURL);\r\n    this._initializeRequestInterceptor();\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  _initializeRequestInterceptor = () => {\r\n    this.instance.interceptors.request.use((config) => {\r\n      config.headers[\"Authorization\"] = `Bearer ${getTokenLocal()}`;\r\n      return config;\r\n    });\r\n  };\r\n\r\n  _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      (response) => {\r\n        return Promise.resolve(response);\r\n      }\r\n    );\r\n  };\r\n\r\n  AllMemberListConfig = ApiRoutes.MemberList.All;\r\n  MemberListByIdConfig = ApiRoutes.MemberList.MemberById;\r\n  FamilyMemberListByIdConfig = ApiRoutes.MemberList.FamilyMemberById;\r\n  AddMemberListConfig = ApiRoutes.MemberList.AddMember;\r\n  EditMemberListConfig = ApiRoutes.MemberList.EditMember;\r\n  DeleteMemberListConfig = ApiRoutes.MemberList.DeleteMember;\r\n\r\n  getAllMember = async () => {\r\n    return this.instance({\r\n      method: this.AllMemberListConfig.Method,\r\n      url: this.AllMemberListConfig.Endpoint,\r\n      headers: {},\r\n      data: null,\r\n    });\r\n  };\r\n  getMemberById = async (data) => {\r\n    return this.instance({\r\n      method: this.MemberListByIdConfig.Method,\r\n      url: this.MemberListByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  getFamilyMemberById = async (data) => {\r\n    return this.instance({\r\n      method: this.FamilyMemberListByIdConfig.Method,\r\n      url: this.FamilyMemberListByIdConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  addMember = async (data) => {\r\n    return this.instance({\r\n      method: this.AddMemberListConfig.Method,\r\n      url: this.AddMemberListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  editMember = async (data) => {\r\n    return this.instance({\r\n      method: this.EditMemberListConfig.Method,\r\n      url: this.EditMemberListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n  deleteMember = async (data) => {\r\n    return this.instance({\r\n      method: this.DeleteMemberListConfig.Method,\r\n      url: this.DeleteMemberListConfig.Endpoint,\r\n      headers: {},\r\n      data: data,\r\n    });\r\n  };\r\n}\r\n\r\nexport default MemberList;\r\n","import React, { useCallback } from \"react\";\r\n// material-ui\r\nimport { Card, Grid, Typography, Button, Chip } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n// project imports\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\nimport { gridSpacing } from \"store/constant\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MemberApi from \"apis/member-list.api\";\r\n\r\n// ===============================|| COLOR BOX ||=============================== //\r\n// ===============================|| UI COLOR ||=============================== //\r\nexport default function Users() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const params = new useParams();\r\n  const memberApi = new MemberApi();\r\n  const familyId = params.id;\r\n\r\n  const [rows, setRows] = React.useState([]);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = async (voterId) => {\r\n    try {\r\n      const deleteMemberResponse = await memberApi.deleteMember({ voterId });\r\n      if (deleteMemberResponse && deleteMemberResponse?.data?.code === 200) {\r\n        getFamilyMemberById();\r\n        return toast.success(\"Deleted Successfully\");\r\n      } else {\r\n        return toast.error(deleteMemberResponse.data?.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getFamilyMemberById = useCallback(async () => {\r\n    try {\r\n      const member = await memberApi.getFamilyMemberById({ familyId });\r\n      if (!member || !member.data.data) {\r\n        return toast.error(\"no latest member available\");\r\n      } else {\r\n        setRows(member.data.data);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Something went wrong\");\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getFamilyMemberById();\r\n  }, []);\r\n\r\n  function formatDate(date) {\r\n    return new Date(date).toLocaleString(\"en-us\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MainCard\r\n        title={\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            spacing={gridSpacing}\r\n          >\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                onChange={(e) => {\r\n                  setSearch(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        content={false}\r\n      >\r\n        {rows ? (\r\n          <Card>\r\n            <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n              <TableContainer sx={{ maxHeight: 540 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ pl: 3 }}>S No.</TableCell>\r\n                      <TableCell>Date Time</TableCell>\r\n                      <TableCell>Name</TableCell>\r\n                      <TableCell>Father Name</TableCell>\r\n                      <TableCell>Gender</TableCell>\r\n                      <TableCell>Voter ID</TableCell>\r\n                      <TableCell>Booth</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {rows\r\n                      .filter((row) =>\r\n                        search.toLowerCase() === \"\"\r\n                          ? row\r\n                          : row.title.toLowerCase().includes(search)\r\n                      )\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row, index) => {\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            role=\"checkbox\"\r\n                            tabIndex={-1}\r\n                            key={index}\r\n                          >\r\n                            <TableCell align=\"start\">{index + 1}</TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.createdAt ? formatDate(row.createdAt) : \"-\"}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">{row.name}</TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.fatherName}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">{row.voterId}</TableCell>\r\n                            <TableCell align=\"start\">\r\n                              {row.boothId.title}\r\n                            </TableCell>\r\n                            <TableCell align=\"start\">{row.gender}</TableCell>\r\n                            <TableCell>\r\n                              <Link to={`/edit-member/${row.memberId}`}>\r\n                                <IconButton\r\n                                  color=\"primary\"\r\n                                  aria-label=\"view\"\r\n                                  size=\"large\"\r\n                                >\r\n                                  <EditIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                                </IconButton>\r\n                              </Link>\r\n                              <IconButton\r\n                                onClick={(e) => {\r\n                                  handleDelete(row.voterId);\r\n                                }}\r\n                                color=\"primary\"\r\n                                aria-label=\"view\"\r\n                                size=\"large\"\r\n                              >\r\n                                <DeleteIcon sx={{ fontSize: \"1.1rem\" }} />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n          </Card>\r\n        ) : (\r\n          <h6>Loading...</h6>\r\n        )}\r\n      </MainCard>\r\n    </>\r\n  );\r\n}\r\n"],"names":["MemberList","HttpClient","constructor","super","process","_initializeRequestInterceptor","this","instance","interceptors","request","use","config","headers","getTokenLocal","_initializeResponseInterceptor","response","Promise","resolve","AllMemberListConfig","ApiRoutes","All","MemberListByIdConfig","MemberById","FamilyMemberListByIdConfig","FamilyMemberById","AddMemberListConfig","AddMember","EditMemberListConfig","EditMember","DeleteMemberListConfig","DeleteMember","getAllMember","async","method","Method","url","Endpoint","data","getMemberById","getFamilyMemberById","addMember","editMember","deleteMember","Users","useNavigate","useDispatch","params","useParams","memberApi","MemberApi","familyId","id","rows","setRows","React","search","setSearch","page","setPage","rowsPerPage","setRowsPerPage","useState","useCallback","member","toast","error","console","useEffect","_jsx","_Fragment","children","MainCard","title","Grid","container","alignItems","justifyContent","spacing","gridSpacing","item","xs","md","TextField","fullWidth","label","type","onChange","e","target","value","content","Card","_jsxs","Paper","sx","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","pl","TableBody","filter","row","toLowerCase","includes","slice","map","index","hover","role","tabIndex","align","createdAt","date","Date","toLocaleString","day","month","year","name","fatherName","voterId","boothId","gender","Link","to","memberId","IconButton","color","size","EditIcon","fontSize","onClick","_deleteMemberResponse","deleteMemberResponse","code","success","_deleteMemberResponse2","message","handleDelete","DeleteIcon","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange"],"sourceRoot":""}